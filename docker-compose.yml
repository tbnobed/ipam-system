services:
  ipam-app:
    build: .
    ports:
      - "5000:5000"
    env_file:
      - .env.docker
    environment:
      # Explicitly set critical environment variables to ensure they're passed
      - NODE_ENV=${NODE_ENV:-production}
      - DEFAULT_SCAN_INTERVAL=${DEFAULT_SCAN_INTERVAL:-5}
      - DATA_RETENTION_DAYS=${DATA_RETENTION_DAYS:-90}
      - ALERT_EMAILS=${ALERT_EMAILS:-alerts@obedtv.com}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - FROM_EMAIL=${FROM_EMAIL:-alerts@obedtv.com}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ipam-network
    volumes:
      - ./migrations:/app/migrations:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ipam_db
      - POSTGRES_USER=ipam_user
      - POSTGRES_PASSWORD=ipam_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - ipam-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ipam_user -d ipam_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  ipam-network:
    driver: bridge